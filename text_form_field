import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

//custom textfield widget to use in login and signup screens

class TextFieldWidget extends StatelessWidget {
  const TextFieldWidget({
    super.key,
    required this.labelText,
    required this.textInputAction,
    required this.textInputType,
    this.textEditingController,
    this.validator,
    required this.autofillHints,
    this.isSecondaryStyle = false,
    this.isEnabled = true,
    this.icon,
    this.initialValue,
    this.onTap,
    this.readOnly = false,
    this.hintText,
    this.suffixIcon,
    this.onChanged,
    this.onEditingComplete,
    this.obscureText = false,
  });
  final String labelText;
  final TextInputAction textInputAction;
  final TextInputType textInputType;
  final TextEditingController? textEditingController;
  final String? Function(String?)? validator;
  final Iterable<String> autofillHints;
  final bool isSecondaryStyle;
  final bool? isEnabled;
  final IconData? icon;
  final IconData? suffixIcon;
  final String? initialValue;
  final void Function()? onTap;
  final bool readOnly;
  final String? hintText;
  final void Function(String)? onChanged;
  final void Function()? onEditingComplete;
  final bool obscureText;

  @override
  Widget build(BuildContext context) {
    // final width = MediaQuery.of(context).size.width;

    return SizedBox(
      // height: width * 0.13,
      child: TextFormField(
        onTap: () {
          onTap != null ? onTap!() : null;
        },
        onChanged: (value) {
          onChanged!(value);
        },
        readOnly: readOnly,
        initialValue: initialValue,
        // autofocus: true,
        enabled: isEnabled, obscureText: obscureText,
        autofillHints: autofillHints,
        autovalidateMode: AutovalidateMode.onUserInteraction,
        validator: validator,
        onEditingComplete: () => onEditingComplete!(),
        decoration: InputDecoration(
            icon: !isSecondaryStyle || icon == null
                ? null
                : Icon(
                    icon,
                    size: 22,
                  ),
            isDense: true,
            label: Text(labelText),
            hintText: hintText,
            suffixIcon: Icon(suffixIcon),
            hintStyle: const TextStyle(fontSize: 14),
            floatingLabelBehavior: !isSecondaryStyle
                ? FloatingLabelBehavior.always
                : FloatingLabelBehavior.always,
            floatingLabelAlignment: FloatingLabelAlignment.start,
            // hintText: !isSecondaryStyle ? 'Name' : null,
            border: !isSecondaryStyle
                ? OutlineInputBorder(borderRadius: BorderRadius.circular(15))
                : const UnderlineInputBorder()),
        keyboardType: textInputType,
        textInputAction: textInputAction,
        controller: textEditingController,
      ),
    );
  }
}
